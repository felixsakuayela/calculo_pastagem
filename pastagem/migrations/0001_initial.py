# Generated by Django 4.2.7 on 2024-05-16 02:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CalculoPastagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peso_amostra_area_tratada', models.FloatField(verbose_name='Peso da Amostra m² em (Kg)')),
                ('peso_amostra_testemunha', models.FloatField(verbose_name='Peso da Amostra Testemunha (Kg)')),
                ('perdas_area_tratada', models.FloatField(verbose_name='Perdas 50%')),
                ('perdas_testemunha', models.FloatField(verbose_name='Perdas Testemunha 50%')),
                ('eficiencia_pastejo_area_tratada', models.FloatField(verbose_name='Eficiência de Pastejo 50%')),
                ('eficiencia_pastejo_testemunha', models.FloatField(verbose_name='Eficiência de Pastejo Testemunha 50%')),
                ('materia_seca_area_tratada', models.FloatField(verbose_name='Matéria Seca 25%')),
                ('materia_seca_testemunha', models.FloatField(verbose_name='Matéria Seca Testemunha 25%')),
                ('periodo_ocupacao', models.IntegerField(verbose_name='Período de Ocupação (dias)')),
                ('numero_piquetes', models.IntegerField(verbose_name='Número de Piquetes')),
                ('peso_vivo', models.FloatField(verbose_name='Peso Vivo (Kg)')),
                ('consumo_animal', models.FloatField(verbose_name='Consumo Animal 2,0% PV')),
                ('ha_area_tratada', models.FloatField(verbose_name='Área Tratada (ha)')),
                ('ha_testemunha', models.FloatField(verbose_name='Área Testemunha (ha)')),
                ('gmd_area_tratada', models.FloatField(verbose_name='Área Tratada (GMD)')),
                ('gmd_testemunha', models.FloatField(verbose_name='Área Testemunha (GMD)')),
                ('ha_periodo_aguas_area_tratada', models.FloatField(verbose_name='@ ha /período das Águas (Área Tratada)')),
                ('ha_periodo_aguas_testemunha', models.FloatField(verbose_name='@ ha /período das Águas (Testemunha)')),
                ('custo', models.FloatField(verbose_name='Custo (R$)')),
                ('periodo_aguas', models.IntegerField(verbose_name='Período das Águas (Dias)')),
            ],
        ),
        migrations.CreateModel(
            name='ResultadoCalculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cap_sup_area_tratada_1', models.IntegerField(verbose_name='Cap. Sup. Área Tratada')),
                ('cap_sup_area_tratada_2', models.IntegerField(verbose_name='Cap. Sup. Área Tratada')),
                ('cap_sup_testemunha_1', models.IntegerField(verbose_name='Cap. Sup. Testemunha')),
                ('cap_sup_testemunha_2', models.IntegerField(verbose_name='Cap. Sup. Testemunha')),
                ('cab_ha_area_tratada', models.FloatField(verbose_name='Capacidade de Suporte (Cab./ha) - Área Tratada')),
                ('cab_ha_testemunha', models.FloatField(verbose_name='Capacidade de Suporte (Cab./ha) - Testemunha')),
                ('cab_ha_porcentagem', models.FloatField(verbose_name='Capacidade de Suporte (Cab./ha) - Testemunha')),
                ('ganho_180_dias_area_tratada_valor', models.FloatField(verbose_name='Ganho 180 dias - Área Tratada (R$)')),
                ('ganho_180_dias_testemunha_valor', models.FloatField(verbose_name='Ganho 180 dias - Testemunha (R$)')),
                ('ganho_por_ha_porcentagem', models.FloatField(verbose_name='Ganho 180 dias - Testemunha (R$)')),
                ('diferenca_ganho', models.FloatField(verbose_name='Diferença de Ganho (R$)')),
            ],
        ),
    ]
